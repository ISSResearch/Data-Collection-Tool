version: "3.8"

services:
  # todo: set admin user
  iss-db:
    container_name: iss-db
    image: postgres:15.3-alpine
    restart: always
    environment:
      POSTGRES_DB: ${DB_APP_DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: ${DB_APP_AUTH_METHOD}
    volumes:
      - ./db:/var/lib/postgresql/data
    networks:
      - iss_network

  iss-back:
    container_name: iss-back
    image: iss_back
    build:
      dockerfile: Dockerfile.backend
    restart: always
    environment:
      DB_HOST: iss-db
      DB_NAME: ${DB_APP_DB_NAME}
      SERVER_ORIGINS: ${SERVER_ORIGINS}
      DEBUG: ${DEBUG}
    depends_on:
      - iss-db
    volumes:
      - ./backend-app:/app
    command: >
      sh -c "python manage.py makemigrations user &&
             python manage.py makemigrations project &&
             python manage.py makemigrations attribute &&
             python manage.py makemigrations file &&
             python manage.py migrate &&
             gunicorn --config './conf/gunicorn_conf.py' proj_back.wsgi:application"
    networks:
      - iss_network

  iss-front:
    container_name: iss-front
    image: iss_front
    build:
      dockerfile: Dockerfile.frontend
    restart: always
    environment:
      PORT: ${FRONTEND_APP_PORT}
    depends_on:
      - iss-back
    volumes:
      - ./frontend-app/src:/app/src
      - ./frontend-app/public:/app/public
    command: npm start
    networks:
      - iss_network

  iss-proxy:
    container_name: iss-proxy
    image: nginx:1.25.1-alpine
    restart: always
    depends_on:
      - iss-back
      - iss-front
    ports:
      - 3000:3000
      - 8000:8000
    volumes:
      - ./nginx/app:/etc/nginx/conf.d
    networks:
      - iss_network

networks:
  iss_network:
